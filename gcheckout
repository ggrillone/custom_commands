#!/bin/bash

# Flags:
# -p: run a git pull after switching branches
# -d: run a delete of the previous branch
run_git_pull=false
run_branch_delete=false

# get the current branch
current_branch=`git branch | grep '*'`
current_branch="${current_branch:2}"

function gcheckout {
  # echo 'gcheckout!'
  count=0 # used to list numbers next to each branch name
  # take the output of 'git branch' and split each newline from the output
  # into an item in an array
  branch_names=$(git branch | cut -c 3- | tr '\n' ',')
  IFS=','  read -r -a branch_arr <<< $branch_names
  IFS=' ' read -r -a branch_arr2 <<< $branch_arr

  # Output branch options to user
  for branch in ${branch_arr[@]}; do
    let "count += 1"
    echo "$count. $branch"
  done

  echo "Enter the number of the branch you want to checkout to: "

  read branch_number # read user input
  # need to -1 because array index starts at 0
  let "branch_number -= 1"

  git checkout ${branch_arr2[$branch_number]} # first switch branches..

  if $run_git_pull && $run_branch_delete; then
    git pull origin ${branch_arr2[$branch_number]}
    
    # verify that there are no git issues with deleting the branch..
    # Redirect stderr to stdout: https://stackoverflow.com/questions/2342826/how-to-pipe-stderr-and-not-stdout
    can_delete=$(git branch -d ${current_branch} 2>&1 >/dev/null | grep -i 'error')

    if [[ "${can_delete}" == *error* ]]; then
      # output error and revert back to original branch
      git branch -d ${current_branch} # current_branch is now the previous branch, a little confusing..
      echo "Switching back to $current_branch ..."
      git checkout $current_branch
    else
      echo 'yay'
    fi
  elif $run_git_pull; then
    echo 'just pull'
  elif $run_branch_delete; then
    echo 'just delete'
  else
    echo 'just checkout'
  fi
}


# read flags
if [ "${1}" = '-p' ] || [ "${2}" = '-p' ] ; then
  run_git_pull=true
fi

if [ "${1}" = '-d' ] || [ "${2}" = '-d' ]; then
  run_branch_delete=true
fi

if $run_branch_delete; then
  echo "*Warning* Are you sure you want to delete the following branch: $current_branch [y/n]?"

  read yes_no_delete_branch
  # https://stackoverflow.com/questions/11392189/converting-string-from-uppercase-to-lowercase-in-bash-shell-scripting
  yes_no_delete_branch_lowercase=`echo "$yes_no_delete_branch" | tr '[:upper:]' '[:lower:]'`

  if [ "$yes_no_delete_branch_lowercase" = 'y' ] || [ "$yes_no_delete_branch_lowercase" = 'yes' ]; then
    gcheckout
  fi
else
  gcheckout
fi
 fi
else
  gcheckout
fi
